Binary Tree Level Order Traversal
------------------------------------------------------------------------------------------------------------------------------------------
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N)
SC : O(N)

vector<vector<int>> levelOrder(TreeNode* root) {
	vector<vector<int>>ans;
	if(root == NULL) return ans;
	queue<TreeNode*>q;
	q.push(root);
	while(!q.empty()) {
		int n = q.size();
		vector<int>level;
		for(int i = 0; i < n; i++) {
			TreeNode* temp = q.front();
			q.pop();
			level.push_back(temp -> val);
			if(temp -> left) q.push(temp -> left);
			if(temp -> right) q.push(temp -> right);
		}
		ans.push_back(level);
	}
	return ans;
}
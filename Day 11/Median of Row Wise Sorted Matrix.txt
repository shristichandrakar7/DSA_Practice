Median of Row Wise Sorted Matrix
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Given a row-wise sorted matrix of size r*c, where r is no. of rows and c is no. of columns, find the median in the given matrix.

Assume â€“ r*c is odd
Example 1:
Input: 
r = 3 , c = 3
1 4 9 
2 5 6
3 8 7
Output: Median = 5

Example 2:
Input: 
r = 3 , c = 3
1 3 8
2 3 4
1 2 5
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O((m*n)log(m*n))
SC : O(m*n)

int median(vector<vector<int>> &matrix, int m, int n) {
	int mat[m*n];
	int ind = 0;
	for(int i = 0; i < m; i++) {
		for(int j = 0; j < n; j++) {
			mat[ind++] = matrix[i][j];
		}
	}
	sort(mat, mat+(n*m));
	return mat[(m*n)/2];
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(m log (n)
SC : O(1)

int f(int midElement, vector<int>&mat) {
	int s = 0, e = mat.size()-1;
	while(s <= e) {
		int mid = s + (e-s)/2;
		if(mat[mid] <= midElement) s = mid+1;
		else e = mid - 1;
	}
	return s;
}

int median(vector<vector<int>> &matrix, int m, int n) {
	int s = 1, e = 1e9;
	int midIndex = (m*n) / 2;
	while(s <= e) {
		int midElement = s + (e-s)/2;
		int cnt = 0;
		for(int i = 0; i < m; i++) {
			cnt += f(midElement, matrix[i]);
		}
		if(cnt <= midIndex) s = midElement + 1;
		else e = midElement - 1;
	}
	return s;
}
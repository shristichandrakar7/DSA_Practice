Allocate Minimum Number of Pages
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Given an array ‘arr of integer numbers, ‘ar[i]’ represents the number of pages in the ‘i-th’ book. There are a ‘m’ number of students, and the task is to allocate all the books to the students.
Allocate books in such a way that:

1.Each student gets at least one book.
2.Each book should be allocated to only one student.
3.Book allocation should be in a contiguous manner.
You have to allocate the book to ‘m’ students such that the maximum number of pages assigned to a student is minimum. If the allocation of books is not possible. return -1

Example 1:
Input Format: n = 4, m = 2, arr[] = {12, 34, 67, 90}
Result: 113

Example 2:
Input Format: n = 5, m = 4, arr[] = {25, 46, 28, 49, 24}
Result: 71
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(n * log(range)) ; range = high - low
SC : O(1)

int f(int nums[], int pages, int n) {
	int student = 1;
	long long allocate = 0;
	for(int i = 0; i < n; i++) {
		if(nums[i] + allocate <= pages) {
			allocate += nums[i];
		}
		else {
			student++;
			allocate = nums[i];
		}
	}
	return student;
}

int findPages(int nums[], int n, int m)  {
	if(m > n) return -1;
	int low = INT_MIN, high = 0;
	for(int i = 0; i < n; i++) {
		low = max(low, nums[i]);
		high += nums[i];
	}
	while(low<=high){
	    int mid= low+(high-low)/2;
	    int cnt=f(nums,mid, n);
	    if(cnt>m) low=mid+1;
	    else high=mid-1;
	}
	return low;
}
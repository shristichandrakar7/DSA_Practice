Search Element in a Rotated Sorted Array
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Given an integer array arr of size N, sorted in ascending order (with distinct values) and a target value k. Now the array is rotated at some pivot point unknown to you. Find the index at which k is present and if k is not present return -1.

Example 1:
Input Format: arr = [4,5,6,7,0,1,2,3], k = 0
Result: 4

Example 2:
Input Format: arr = [4,5,6,7,0,1,2], k = 3
Result: -1
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(n)
SC : O(1)

int search(vector<int>& nums, int target) {
	for(int i = 0; i < nums.size(); i++) {
		if(target == nums[i]) return i;
	}
	return -1;
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(log n)
SC : O(1)

int search(vector<int>& nums, int target) {
	int s = 0, e = nums.size()-1;
	while(s <= e) {
		int mid = s + (e-s)/2;
		if(nums[mid] == target) return mid;
		
		if(nums[s] <= nums[mid]) {
			if(nums[s] <= target && target <= nums[mid]) e = mid - 1;
			else s = mid+1;
		}
		
		else {
			if(nums[mid] <= target && target <= nums[e]) s = mid+1;
			else e = mid-1;
		}
	}
	return -1;
}

Count distinct elements in every window
------------------------------------------------------------------------------------------------------------------------------------------
Given an array of integers and a number K. Find the count of distinct elements in every window of size K in the array.

Example 1:
Input:
N = 7, K = 4
A[] = {1,2,1,3,4,2,3}
Output: 3 4 4 3
Explanation: Window 1 of size k = 4 is
1 2 1 3. Number of distinct elements in
this window are 3. 
Window 2 of size k = 4 is 2 1 3 4. Number
of distinct elements in this window are 4.
Window 3 of size k = 4 is 1 3 4 2. Number
of distinct elements in this window are 4.
Window 4 of size k = 4 is 3 4 2 3. Number
of distinct elements in this window are 3.

Example 2:
Input:
N = 3, K = 2
A[] = {4,1,1}
Output: 2 1
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(n*k*k)
SC : O(1)

int f(int arr[], int start, int k) {
	int count = 0;
	for(int i = start; i < k; i++) {
		int j;
		for(j = start; j < i; j++) {
			if(arr[i] == arr[j]) break;
		}
		if(i == j) count++;
	}
	return count;
}

vector <int> countDistinct (int arr[], int n, int k) {
	vector <int> ans;
	for(int i = 0; i <= n-k; i++) {
		ans.push_back(f(arr, i, k+i));
	}
	return ans;
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(n)
SC : O(n)

vector <int> countDistinct (int arr[], int n, int k) {
	vector <int> ans;
	unordered_map<int,int>mp;
	int i = 0, j = 0;
	while(j < n) {
		mp[arr[j]]++;
		if(j-i+1 == k) {
			ans.push_back(mp.size());
			mp[arr[i]]--;
			if(mp[arr[i]] == 0) mp.erase(arr[i]);
			i++;
		}
		j++;
	}
	return ans;
}
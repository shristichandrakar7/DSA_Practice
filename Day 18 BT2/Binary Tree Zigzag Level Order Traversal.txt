Binary Tree Zigzag Level Order Traversal
------------------------------------------------------------------------------------------------------------------------------------------
Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: [[3],[20,9],[15,7]]

Example 2:
Input: root = [1]
Output: [[1]]
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N)
SC : O(N)

vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
	vector<vector<int>>ans;
	if(root == NULL) return ans;
	int flag = 0;   // 0 -> left to right   and  1 -> right to left
	queue<TreeNode*>q;
	q.push(root);
	while(!q.empty()) {
		int n = q.size();
		vector<int>level(n);
		for(int i = 0; i < n; i++) {
			int ind;
			if(flag == 0) ind = i;
			else if(flag == 1) ind = n-i-1;
			TreeNode* node = q.front();
			q.pop();
			level[ind] = node -> val;
			if(node->left) q.push(node->left);
			if(node->right) q.push(node->right);
		}
		flag = !flag;
		ans.push_back(level);
	}
	return ans;
}
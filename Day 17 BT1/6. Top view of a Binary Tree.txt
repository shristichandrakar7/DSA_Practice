Top view of a Binary Tree
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Given below is a binary tree. The task is to print the top view of the binary tree. The top view of a binary tree is the set of nodes visible when the tree is viewed from the top.

Example 1:
Input:
      1
   /    \
  2      3
Output: 2 1 3

Example 2:
Input:
       10
    /      \
  20        30
 /   \    /    \
40   60  90    100
Output: 40 20 10 30 100
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC: O(N)
SC: O(N)

vector<int> topView(Node *root) {
    vector<int>ans;
	if(root == NULL) return ans;
	map<int,int>mp;
	queue<pair<Node*, int>>q;
	q.push({root, 0});
	while(!q.empty()) {
		Node* temp = q.front().first;
		int level = q.front().second;
		q.pop();
		if(mp.find(level)==mp.end())
			mp[level] = temp -> data;
		if(temp -> left) q.push({temp -> left, level-1});
		if(temp -> right) q.push({temp -> right, level+1});
	}
	for(auto it : mp) {
		ans.push_back(it.second);
	}
	return ans;
}
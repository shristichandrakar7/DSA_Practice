Preorder, Postorder and Inorder Traversal of a Binary Tree
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Preorder Inorder Postorder Traversals in One Traversal. Write a program to print Preorder, Inorder, and Postorder traversal of the tree in a single traversal.

Input:
	1
   / \
  2   3
Output:
Preorder Traversal: 1 2 3
Inorder Traversal: 2 1 3
Postorder Traversal: 2 3 1
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC: O(N)
SC: O(N)

vector<vector<int>> getTreeTraversal(TreeNode *root){
	vector<vector<int>> ans;
	if(root == NULL) return ans;
	vector<int> pre, in, post;
	stack<pair<TreeNode*,int>> st;
	st.push({root, 1});
	while(!st.empty()){
		auto it=st.top();
		st.pop();
		if(it.second==1){
			pre.push_back(it.first->data);
			it.second++;
			st.push(it);
			if(it.first->left)
                st.push({it.first->left, 1});
        }
		else if(it.second==2){
			in.push_back(it.first->data);
			it.second++;
			st.push(it);
			if(it.first->right) st.push({it.first->right, 1});
		}
		else{
			post.push_back(it.first->data);
		}
	}
	ans.push_back(in);
	ans.push_back(pre);
	ans.push_back(post);
	return ans;
}
Check for Balanced Parentheses
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Check Balanced Parentheses. Given string str containing just the characters ‘(‘, ‘)’, ‘{‘, ‘}’, ‘[‘ and ‘]’, check if the input string is valid and return true if the string is balanced otherwise return false.

Note: string str is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.

Example 1:
Input: str = “( )[ { } ( ) ]”
Output: True

Example 2:
Input: str = “[ ( )”
Output: False
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N)
SC : O(N)

bool isValid(string s) {
	int n= s.size();
	stack<int> st;
	for(int i=0; i<n; i++){
		if(s[i]=='{' || s[i]=='(' || s[i]=='[') st.push(s[i]);
		else if(st.empty()) return false;
		else if((s[i]=='}' && st.top()=='{') || (s[i]==']' && st.top()=='[') || (s[i]==')' && st.top()=='(')) st.pop();
		else return false;
	}
	return st.empty();
}

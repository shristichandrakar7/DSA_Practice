Pascal's Triangle
------------------------------------------------------------------------------------------------------------------------------------------
Variation 1: Given row number r and column number c. Print the element at position (r, c) in Pascal’s triangle.

TC : O(c)
SC : O(1)

int ncr(int n, int r){
	int ans=1;
	for(int i=1; i<=r; i++){
		ans*=(n-(i-1));
		ans/=(i);
	}
	return ans;
}
int pascalTriangle(int r, int c) {
	return ncr(r-1,c-1);
}
------------------------------------------------------------------------------------------------------------------------------------------
Variation 2: Given the row number n. Print the n-th row of Pascal’s triangle.

TC : O(n)
SC : O(1)

vector<int> getRow(int n) {
    vector<int> res;
    long long ans=1;
    res.push_back(1);
    for(int i=1; i<=n; i++){
        ans*=(n-(i-1));
        ans/=i;
        res.push_back(ans);
    }
    return res;
}
------------------------------------------------------------------------------------------------------------------------------------------
Variation 3: Given the number of rows n. Print the first n rows of Pascal’s triangle.

TC : O(n*n)
SC : O(1)

vector<vector<int>> f(int n){
    vector<vector<int>> res;
    vector<int> f;
    res.push_back({1});
    if(n==0) {f={1};}
    for(int row=1; row<=n; row++){
        vector<int> v;
        long long ans=1;
        v.push_back(ans);
        for(int col=1; col<=row; col++){
            ans*=(row-(col-1));
            ans/=col;
            v.push_back(ans);
        }
        res.push_back(v);
    }
    return res;
}
Minimum number of platforms required for a railway
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: We are given two arrays that represent the arrival and departure times of trains that stop at the platform. We need to find the minimum number of platforms needed at the railway station so that no train has to wait.

Example:
Input: N=6, 
arr[] = {9:00, 9:45, 9:55, 11:00, 15:00, 18:00} 
dep[] = {9:20, 12:00, 11:30, 11:50, 19:00, 20:00}
Output:3
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC: O(n*n)
SC: O(1)

int countPlatforms(int n,int arr[],int dep[]){
	int ans=1;
	for(int i=0; i<n; i++){
		int cnt=1;
		for(int j=i+1; j<n; j++){
			if((arr[i]>=arr[j] && dep[j]>=arr[i]) || (arr[j]>=arr[i] && arr[j]<=dep[i])) cnt++;
		}
		ans=max(ans, cnt);
	}
	return ans;
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC: O(n*log(n))
SC: O(1)


int findPlatform(int arr[], int dep[], int n){
        sort(arr, arr+n);
        sort(dep, dep+n);
        int i=1, j=0;
        int ans=1, cnt=1;
        while(i<n && j<n){
            if(arr[i]<=dep[j]){
                cnt++;
                i++;
            }else{
                cnt--;
                j++;
            }
            ans=max(ans, cnt);
        }
        return ans;
    }
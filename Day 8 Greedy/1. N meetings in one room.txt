N meetings in one room
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: There is one meeting room in a firm. You are given two arrays, start and end each of size N.For an index ‘i’, start[i] denotes the starting time of the ith meeting while end[i]  will denote the ending time of the ith meeting. Find the maximum number of meetings that can be accommodated if only one meeting can happen in the room at a  particular time. Print the order in which these meetings will be performed.

Example:
Input:  N = 6,  start[] = {1,3,0,5,8,5}, end[] =  {2,4,5,7,9,9}
Output: 4
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(NlogN)
SC : O(1)

int maxMeetings(int start[], int end[], int n) {
	priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
	for(int i=0; i<n; i++){
		pq.push({end[i], start[i]});
	}
	
	int endtime=pq.top().first;
	pq.pop();
	int cnt=1;
	while(!pq.empty()){
		int starttime=pq.top().second;
		if(starttime>endtime){
			cnt++;
			endtime=pq.top().first;
		}
		pq.pop();
	}
	return cnt;
}
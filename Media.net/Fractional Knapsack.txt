Fractional Knapsack
-----------------------------------------------------------------------------------
Gringotts

#include <bits/stdc++.h>
using namespace std;
int minimumDivisions(vector<int>& A, int B) {
    int n = A.size();
    priority_queue<int>pq;
    for(auto it:A){
        pq.push(it);
    }
    int count = 0;
    int i = 0;
    while(B>0 && !pq.empty()){
        if(pq.top()<=B){
            B-=pq.top();
            pq.pop();
        }
        else {
            count++;
            int val = pq.top()/2;
            pq.pop();
            pq.push(val);
        }
    }
    return B==0 ? count:-1;
}

int main() {
#ifndef ONLINE_JUDGE
    //for getting input from input.txt
    freopen("input.txt", "r", stdin);
    //for writing output to output.txt
    freopen("output.txt", "w", stdout);
#endif
    int n, B;
    B = 23;
    vector<int>A = {16,1,4,1};
    int minDivisions = minimumDivisions(A, B);
    if (minDivisions == INT_MAX) {
        cout<<"-1";
    } else {
        std::cout << "Minimum number of divisions needed: " << minDivisions << std::endl;
    }

    return 0;

}
Valid Anagram
------------------------------------------------------------------------------------------------------------------------------------------
Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once. 

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N log N)
SC : O(1)

bool isAnagram(string s, string t) {
	int n = s.size();
	int m = t.size();
	if(n != m) return false;
	sort(s.begin(), s.end());
	sort(t.begin(), t.end());
	for(int i = 0; i < n; i++) {
		if(s[i] != t[i]) return false;
	}
	return true;
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(N)
SC : O(26) ~ O(1)

bool isAnagram(string s, string t) {
	int n = s.size();
	int m = t.size();
	if(n != m) return false;
	int freq[26];
	for(int i = 0; i < n; i++) {
		freq[s[i]]++;
		freq[t[i]]--;
	}
	for(int i = 0; i < 26; i++) {
		if(freq[i]) return false;
	}
	return true;
}
Implement Stack using Array
------------------------------------------------------------------------------------------------------------------------------------------
Problem statement: Implement a stack using an array.

Note: Stack is a data structure that follows the Last In First Out (LIFO) rule.

Explanation: 
1. push(): Insert the element in the stack.
2. pop(): Remove and return the topmost element of the stack.
3. top(): Return the topmost element of the stack
4. size(): Return the number of remaining elements in the stack.
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC: O(N)
SC: O(N)

class Stack {
    int *arr;
    int head;
    int cap;
public:  
    Stack(int capacity) {
        cap = capacity;
        arr = new int[cap];
        head = -1;
    }

    void push(int num) {
        if(head != cap-1) {
            head++;
            arr[head] = num;
        }
    }

    int pop() {
        if(head == -1) return -1;
        int x = arr[head];
        head--;
        return x;
    }
    
    int top() {
        if(head == -1) return -1;
        return arr[head];
    }
    
    int isEmpty() {
        if(head == -1) return 1;
        return 0;
    }
    
    int isFull() {
        if(head == cap-1) return 1;
        return 0;
    }
    
};

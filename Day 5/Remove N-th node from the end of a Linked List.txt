Remove N-th node from the end of a Linked List
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Given a linked list, and a number N. Find the Nth node from the end of this linked list and delete it. Return the head of the new modified linked list.

Input: head = [7,6,9,4,13,2,8], n = 6
Output: [7,9,4,13,2,8]
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(2n)
SC : O(1)

ListNode* removeNthFromEnd(ListNode* head, int n) {
	int cnt = 0;
	ListNode* start = new ListNode(-1);
	start->next=head;
	ListNode* slow = start;
	while(slow -> next != NULL) {
		cnt++;
		slow = slow -> next;
	}
	slow = start;
	for(int i = 1; i <= (cnt-n); i++) {
		slow = slow -> next;
	}
	slow -> next = slow -> next -> next;
	return start -> next;
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(n)
SC : O(1)

ListNode* removeNthFromEnd(ListNode* head, int n) {
	ListNode* start = new ListNode(-1);
	start->next=head;
	ListNode* slow = start;
	ListNode* fast = start;
	for(int i = 1; i <= n; i++) {
		fast = fast -> next;
	}
	while(fast -> next != NULL) {
		slow = slow -> next;
		fast = fast -> next;
	}
	slow -> next = slow -> next -> next;
	return start -> next;
}
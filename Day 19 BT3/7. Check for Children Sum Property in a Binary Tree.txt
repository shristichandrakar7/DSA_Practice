Check for Children Sum Property in a Binary Tree
------------------------------------------------------------------------------------------------------------------------------------------
Problem Statement: Children Sum Property in a Binary Tree. Write a program that converts any binary tree to one that follows the children sum property.

The children sum property is defined as, For every node of the tree, the value of a node is equal to the sum of values of its children(left child and right child).

Note: 

The node values can be increased by 1 any number of times but decrement of any node value is not allowed.
A value for a NULL node can be assumed as 0.
You are not allowed to change the structure of the given binary tree.

Example 1:
Input:
			 40
		   /    \
		  10    20
		 /  \   / \
		2	5  30  40
Output:
			 150
		   /    \
		  80    70
		 /  \   / \
		40	40  30  40
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N)
SC : O(N)

void changeTree(node * root) {
	if(root == NULL) return;
	node* cur = root;
	int curSum = 0;
	if(cur -> left) curSum += cur -> left -> val;
	if(cur -> right) curSum += cur -> right -> val;
	
	if(curSum < cur -> val) {
		if(cur -> left) cur -> left -> val = cur -> val;
		if(cur -> right) cur -> right -> val = cur -> val;
	}
	else {
		cur -> val = curSum;
	}
	changeTree(cur -> left);
	changeTree(cur -> right);
	
	int tot = 0;
	if(cur -> left) tot += cur -> left -> val;
	if(cur -> right) tot += cur -> right -> val;
	if(cur -> left || cur -> right) cur -> val = tot;
}		


k-th smallest element in BST
------------------------------------------------------------------------------------------------------------------------------------------
Given a BST and an integer K. Find the Kth Smallest element in the BST using O(1) extra space. 

Example 1:
Input:
      2
    /   \
   1     3
K = 2
Output: 2
Explanation: 2 is the 2nd smallest element in the BST

Example 2:
Input:
        2
      /  \
     1    3
K = 5
Output: -1
Explanation: There is no 5th smallest element in the BST as the size of BST is 3
------------------------------------------------------------------------------------------------------------------------------------------
Approach 1:

TC : O(N)
SC : O(N)

void inorder(Node* root, int k, vector<int>& temp) {
	if(!root) return;
	inorder(root -> left, k, temp);
	temp.push_back(root -> data);
	inorder(root -> right, k, temp);
}

int KthSmallestElement(Node *root, int k) {
	vector<int>temp;
	inorder(root, k, temp);
	if(k > temp.size()) return -1;
	return temp[k-1];
}
------------------------------------------------------------------------------------------------------------------------------------------
Approach 2:

TC : O(N)
SC : O(1)

int KthSmallestElement(Node *root, int k) {
	Node* cur=root;
	int ind=0;
	while(cur){
		if(cur->left==NULL){
			ind++;
			if(k==ind) return cur->data;
			cur=cur->right;
		}
		else{
			Node* prev = cur -> left;
			while(prev -> right && prev -> right != cur) {
				prev = prev -> right;
			}
			if(prev -> right != cur) {
				prev -> right = cur;
				cur = cur -> left;
			}
			else {
				prev -> right = NULL;
				ind++;
				if(k==ind) return cur->data;
				cur=cur->right;
			}
		}
	}
	return -1;
}